# Generated by Django 5.1.4 on 2025-01-04 17:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="FuelType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fuel_type",
                    models.CharField(
                        choices=[
                            ("P", "Petrol"),
                            ("D", "Diesel"),
                            ("E", "Electric"),
                            ("H", "Hydrogen"),
                            ("C", "Compressed Natural Gas"),
                            ("X", "Hybrid"),
                        ],
                        max_length=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Performance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("top_speed", models.IntegerField(help_text="Unit: km/h", null=True)),
                (
                    "acceleration_min",
                    models.FloatField(help_text="Unit: seconds", null=True),
                ),
                (
                    "acceleration_max",
                    models.FloatField(help_text="Unit: seconds", null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TagCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Brand", "Brand"),
                            ("Fuel Type", "Fuel Type"),
                            ("Engine", "Engine"),
                            ("Seats", "Seats"),
                            ("Price Range", "Price Range"),
                            ("Displacement", "Displacement"),
                            ("Performance Metrics", "Performance Metrics"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField()),
                ("seats", models.CharField(max_length=10)),
                ("year", models.IntegerField(default=2024)),
                ("price_min", models.IntegerField(null=True)),
                ("price_max", models.IntegerField(null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="cars.brand"
                    ),
                ),
                ("fuel_type", models.ManyToManyField(to="cars.fueltype")),
                (
                    "performance",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cars.performance",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Engine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cylinder_layout",
                    models.CharField(
                        choices=[
                            ("I", "Inline/Straight"),
                            ("V", "V"),
                            ("F", "Flat/Boxer"),
                            ("W", "W"),
                            ("R", "Rotary/Wankel"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("cylinder_count", models.PositiveSmallIntegerField(null=True)),
                (
                    "aspiration",
                    models.CharField(
                        choices=[
                            ("T", "Turbocharged"),
                            ("S", "Supercharged"),
                            ("W", "Twin Turbo"),
                            ("Q", "Quad Turbo"),
                            ("N", "Naturally Aspirated"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "engine_capacity",
                    models.PositiveIntegerField(help_text="Unit: cc", null=True),
                ),
                (
                    "battery_capacity",
                    models.FloatField(help_text="Unit: kWh", null=True),
                ),
                (
                    "horsepower",
                    models.PositiveIntegerField(help_text="Unit: hp", null=True),
                ),
                (
                    "torque",
                    models.PositiveIntegerField(help_text="Unit: Nm", null=True),
                ),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cars.car"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=50)),
                ("cars", models.ManyToManyField(to="cars.car")),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cars.tagcategory",
                    ),
                ),
            ],
            options={
                "unique_together": {("value", "category")},
            },
        ),
    ]
