# Generated by Django 5.1.4 on 2025-01-05 12:16

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="FuelType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fuel_type",
                    models.CharField(
                        choices=[
                            ("P", "Petrol"),
                            ("D", "Diesel"),
                            ("E", "Electric"),
                            ("H", "Hydrogen"),
                            ("C", "Compressed Natural Gas"),
                            ("X", "Hybrid"),
                        ],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "ordering": ["fuel_type"],
            },
        ),
        migrations.CreateModel(
            name="Performance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "top_speed",
                    models.IntegerField(
                        blank=True,
                        help_text="Unit: km/h",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                    ),
                ),
                (
                    "acceleration_min",
                    models.FloatField(
                        blank=True,
                        help_text="Unit: seconds",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(30.0),
                        ],
                    ),
                ),
                (
                    "acceleration_max",
                    models.FloatField(
                        blank=True,
                        help_text="Unit: seconds",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(30.0),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TagCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Brand", "Brand"),
                            ("Fuel Type", "Fuel Type"),
                            ("Engine", "Engine"),
                            ("Seats", "Seats"),
                            ("Price Range", "Price Range"),
                            ("Displacement", "Displacement"),
                            ("Performance Metrics", "Performance Metrics"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "slug",
                    models.SlugField(allow_unicode=True, max_length=255, unique=True),
                ),
                ("seats", models.CharField(max_length=10)),
                (
                    "year",
                    models.IntegerField(
                        default=2024,
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2100),
                        ],
                    ),
                ),
                (
                    "price_min",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "price_max",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="cars.brand"
                    ),
                ),
                ("fuel_type", models.ManyToManyField(to="cars.fueltype")),
                (
                    "performance",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cars.performance",
                    ),
                ),
            ],
            options={
                "ordering": ["brand", "name"],
                "unique_together": {("brand", "name")},
            },
        ),
        migrations.CreateModel(
            name="Engine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cylinder_layout",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("I", "Inline/Straight"),
                            ("V", "V"),
                            ("F", "Flat/Boxer"),
                            ("W", "W"),
                            ("R", "Rotary/Wankel"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "cylinder_count",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "aspiration",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("T", "Turbocharged"),
                            ("S", "Supercharged"),
                            ("W", "Twin Turbo"),
                            ("Q", "Quad Turbo"),
                            ("N", "Naturally Aspirated"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "engine_capacity",
                    models.PositiveIntegerField(
                        blank=True, help_text="Unit: cc", null=True
                    ),
                ),
                (
                    "battery_capacity",
                    models.FloatField(
                        blank=True,
                        help_text="Unit: kWh",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "horsepower",
                    models.PositiveIntegerField(
                        blank=True, help_text="Unit: hp", null=True
                    ),
                ),
                (
                    "torque",
                    models.PositiveIntegerField(
                        blank=True, help_text="Unit: Nm", null=True
                    ),
                ),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cars.car"
                    ),
                ),
            ],
            options={
                "ordering": ["-cylinder_layout", "-cylinder_count", "-aspiration"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=50)),
                ("cars", models.ManyToManyField(to="cars.car")),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cars.tagcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["category", "value"],
                "unique_together": {("category", "value")},
            },
        ),
    ]
